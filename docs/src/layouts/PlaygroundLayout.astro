---
export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en" data-theme="dark">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
  </head>
  <body>
     <header class="playground-header">
      <div class="header-content">
        <div class="header-left">
          <a href="/" class="back-link">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
              <path
                d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z"
              ></path>
            </svg>
            Back to Docs
          </a>
          <h1>CSS Logical Properties Playground</h1>
        </div>
        <div class="header-right"></div>
      </div>
    </Default>

    <main class="playground-main">
      <slot />
    </main>

    <style>
      :root {
        /* Light theme */
        --bg-primary: #ffffff;
        --bg-secondary: #f8f9fa;
        --bg-tertiary: #e9ecef;
        --text-primary: #212529;
        --text-secondary: #6c757d;
        --border-color: #dee2e6;
        --accent-color: #0d6efd;
        --accent-hover: #0b5ed7;
        --shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      }

      * {
        box-sizing: border-box;
      }

      body {
        margin: 0;
        font-family:
          'Inter',
          -apple-system,
          BlinkMacSystemFont,
          'Segoe UI',
          system-ui,
          sans-serif;
        background: var(--bg-primary);
        color: var(--text-primary);
        transition:
          background-color 0.2s ease,
          color 0.2s ease;
      }

      .playground-header {
        background: var(--bg-secondary);
        border-bottom: 1px solid var(--border-color);
        padding: 1rem 0;
        position: sticky;
        top: 0;
        z-index: 100;
      }

      .header-content {
        max-width: 100%;
        margin: 0 auto;
        padding: 0 1.5rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      .header-left {
        display: flex;
        align-items: center;
        gap: 1rem;
      }

      .back-link {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: var(--text-secondary);
        text-decoration: none;
        padding: 0.5rem;
        border-radius: 0.5rem;
        transition: all 0.2s ease;
      }

      .back-link:hover {
        color: var(--accent-color);
        background: var(--bg-tertiary);
      }

      h1 {
        margin: 0;
        font-size: 1.5rem;
        font-weight: 600;
        color: var(--text-primary);
      }

      .theme-toggle {
        background: none;
        border: 1px solid var(--border-color);
        border-radius: 0.5rem;
        padding: 0.5rem;
        color: var(--text-primary);
        cursor: pointer;
        transition: all 0.2s ease;
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .theme-toggle:hover {
        background: var(--bg-tertiary);
        border-color: var(--accent-color);
      }

      .theme-toggle .sun-icon {
        display: none;
      }

      .theme-toggle .moon-icon {
        display: block;
      }

      [data-theme='light'] .theme-toggle .sun-icon {
        display: block;
      }

      [data-theme='light'] .theme-toggle .moon-icon {
        display: none;
      }

      .playground-main {
        height: calc(100vh - 80px);
        overflow: auto;
      }

      #playground-app {
        height: 100%;
        display: flex;
        flex-direction: column;
        gap: 1rem;
        padding: 1.5rem;
      }

      .playground-config {
        background: var(--bg-secondary);
        border: 1px solid var(--border-color);
        border-radius: 0.75rem;
        padding: 1.5rem;
        box-shadow: var(--shadow);
      }

      .playground-config h3 {
        margin: 0 0 1rem 0;
        font-size: 1.25rem;
        font-weight: 600;
      }

      .config-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
      }

      .config-group {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
      }

      .config-group label {
        font-weight: 500;
        color: var(--text-secondary);
        font-size: 0.875rem;
      }

      .config-group input,
      .config-group select {
        padding: 0.75rem;
        border: 1px solid var(--border-color);
        border-radius: 0.5rem;
        background: var(--bg-primary);
        color: var(--text-primary);
        font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono',
          monospace;
        transition: border-color 0.2s ease;
      }

      .config-group input:focus,
      .config-group select:focus {
        outline: none;
        border-color: var(--accent-color);
      }

      .playground-editors {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 1rem;
        flex: 1;
        min-height: 0;
      }

      .editor-panel {
        background: var(--bg-secondary);
        border: 1px solid var(--border-color);
        border-radius: 0.75rem;
        display: flex;
        flex-direction: column;
        overflow: hidden;
        box-shadow: var(--shadow);
      }

      .editor-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem 1.5rem;
        border-bottom: 1px solid var(--border-color);
        background: var(--bg-tertiary);
      }

      .editor-header h4 {
        margin: 0;
        font-size: 1rem;
        font-weight: 600;
      }

      .btn-secondary {
        background: var(--bg-primary);
        border: 1px solid var(--border-color);
        color: var(--text-primary);
        padding: 0.5rem 1rem;
        border-radius: 0.5rem;
        cursor: pointer;
        font-size: 0.875rem;
        transition: all 0.2s ease;
      }

      .btn-secondary:hover {
        background: var(--accent-color);
        color: white;
        border-color: var(--accent-color);
      }

      .editor {
        flex: 1;
        min-height: 300px;
        padding: 1rem;
        border: none;
        background: var(--bg-primary);
        color: var(--text-primary);
        font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono',
          monospace;
        font-size: 0.875rem;
        line-height: 1.5;
        resize: none;
        outline: none;
        tab-size: 2;
      }

      .editor:focus {
        background: var(--bg-primary);
      }

      .editor.readonly {
        background: var(--bg-tertiary);
        cursor: default;
      }

      .btn-icon {
        background: none;
        border: none;
        color: var(--text-secondary);
        cursor: pointer;
        padding: 0.5rem;
        border-radius: 0.25rem;
        transition: all 0.2s ease;
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .btn-icon:hover {
        background: var(--bg-tertiary);
        color: var(--text-primary);
      }

      .error-display {
        position: fixed;
        top: 2rem;
        right: 2rem;
        background: #ef4444;
        color: white;
        padding: 1rem;
        border-radius: 0.5rem;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
        z-index: 1000;
        max-width: 400px;
        transition: all 0.3s ease;
        cursor: pointer;
      }

      .error-display.hidden {
        opacity: 0;
        transform: translateY(-100%);
        pointer-events: none;
      }

      .error-content {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.875rem;
      }

      .preview-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
      }

      .preview-header h4 {
        margin: 0;
        font-size: 1.25rem;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 0.5rem;
      }

      .radio-label {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.875rem;
        color: var(--text-primary);
        cursor: pointer;
      }

      .radio-label input[type='radio'] {
        margin: 0;
      }
      @media (max-width: 1024px) {
        .playground-editors {
          grid-template-columns: 1fr;
          gap: 1rem;
        }

        .config-grid {
          grid-template-columns: 1fr;
        }
      }
    </style>
  </body>
</html>
